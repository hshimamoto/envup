#!/bin/bash
# vim: set sw=2 sts=2:

vimrc()
{
  if [ -e .vimrc ]; then
    return
  fi
  cat > .vimrc <<_VIMRC_
set nobackup
set noswapfile
set modeline
colorscheme desert256
_VIMRC_
  # vim-plug?
  if [ -e .vim/autoload/plug.vim ]; then
    cat >> .vimrc <<_VIMRC_VIM_PLUG_
"================ BEGIN vim-plug
" vim-plug
call plug#begin('~/.vim/plugged')
" list plugins
" TAG VIM_PLUG_MARK
call plug#end()
"================ END vim-plug
_VIMRC_VIM_PLUG_
  fi
}

vimplug_lightline()
{
  # Plug 'itchyny/lightline.vim'
  grep -q lightline.vim .vimrc
  if [ $? -eq 0 ]; then
    return
  fi
  mark="\" TAG VIM_PLUG_MARK"
  cp -a .vimrc .vimrc.old
  sed -e "s/$mark.*\$/Plug 'itchyny\/lightline.vim'\n$mark/" .vimrc.old > .vimrc
  vim +PlugInstall +qa
  cat >> .vimrc <<_VIMRC_VIM_PLUG_LIGHTLINE_

" for lightline
set laststatus=2
_VIMRC_VIM_PLUG_LIGHTLINE_
}

vimplug()
{
  mkdir -p .vim/autoload
  if [ -e .vim/autoload/plug.vim ]; then
    return
  fi
  # download
  echo "getting vim-plug"
  curl -L -o .vim/autoload/plug.vim \
    'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
}

vimcolors()
{
  mkdir -p .vim/colors
  if [ -e .vim/colors/desert256.vim ]; then
    return
  fi
  # download
  echo "getting desert256.vim"
  curl -L -o .vim/colors/desert256.vim \
    'http://www.vim.org/scripts/download_script.php?src_id=4055'
}

vimfiles()
{
  echo "vim related files"
  vimcolors
  vimplug
  vimrc
  vimplug_lightline
}

gitconfig()
{
  echo "gitconfig"
  if [ -e .gitconfig ]; then
    return
  fi
  if [ -n "$http_proxy" ]; then
    cat >> .gitconfig <<_GITCONFIG_
[http]
	proxy = $http_proxy
[https]
	proxy = $http_proxy
_GITCONFIG_
  fi
  cat >> .gitconfig <<_GITCONFIG_
[core]
	editor = vim
[user]
	name = Hiroshi Shimamoto
	email = hshimamoto@users.noreply.github.com
_GITCONFIG_
}

sshconfiggo()
{
  binxzurl=https://raw.githubusercontent.com/hshimamoto/sshconfiggo/x86_64-linux/sshcompile.xz
  mkdir bin
  cd bin
  curl -L -O $binxzurl
  xz -d sshcompile.xz
  chmod +x sshcompile
  cd ..
}

sshconfigrb()
{
  if [ ! -d bin ]; then
    git clone https://github.com/hshimamoto/sshconfigrb.git bin
  fi
}

sshconfig()
{
  if [ ! -d .ssh ]; then
    mkdir .ssh
    chmod 700 .ssh
  fi
  cd .ssh
  mkdir hosts
  mkdir keys

  sshconfiggo

  cd ..
}

screenrc()
{
  echo "screenrc"
  if [ -e .screenrc ]; then
    return
  fi
  cat > .screenrc <<_SCREENRC_
startup_message off
caption always "%{= bk} %?%F%{b kr}%? %?%h%:%n %t%? %{-}"
hardstatus alwayslastline "%{= Gk} %L=%-w%45L>%n %t %+w %-24<%=[%l] %C%a "
termcapinfo xterm* ti@:te@
_SCREENRC_
}

checkproxy()
{
  if [ -n "$http_proxy" ]; then
    return
  fi
  if [ -n "$https_proxy" ]; then
    export http_proxy=$https_proxy
    return
  fi
  if [ -e .curlrc ]; then
    http_proxy=`grep 'proxy' .curlrc | awk -F'=' '{print $2}'`
    export http_proxy
  fi
}

echo "envup start"

cd $HOME

checkproxy
vimfiles
gitconfig
sshconfig
screenrc
